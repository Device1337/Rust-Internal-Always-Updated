#include "offsets.hpp"
#include "il2cpp.hpp"
#include "../utils/memory.hpp"

namespace offsets
{
	uintptr_t get_material = il2cpp::method(xorstr_("Renderer"), xorstr_("get_material"), 0, xorstr_("UnityEngine"));
	uintptr_t get_shader = il2cpp::method(xorstr_("Material"), xorstr_("get_shader"), 0, xorstr_("UnityEngine"));
	uintptr_t find = il2cpp::method(xorstr_("Shader"), xorstr_("Find"), 1, xorstr_("UnityEngine"));
	uintptr_t set_shader = il2cpp::method(xorstr_("Material"), xorstr_("set_shader"), 1, xorstr_("UnityEngine"));
	uintptr_t set_color = il2cpp::method(xorstr_("Material"), xorstr_("SetColor"), 2, xorstr_("UnityEngine"));
	uintptr_t set_int = il2cpp::method(xorstr_("Material"), xorstr_("SetInt"), 2, xorstr_("UnityEngine"));
	uintptr_t _displayName = il2cpp::value(xorstr_("BasePlayer"), xorstr_("_displayName"));
	uintptr_t userID = il2cpp::value(xorstr_("BasePlayer"), xorstr_("userID"));
	uintptr_t clActiveItem = il2cpp::value(xorstr_("BasePlayer"), xorstr_("clActiveItem"));
	uintptr_t movement = il2cpp::value(xorstr_("BasePlayer"), xorstr_("movement"));
	uintptr_t input = il2cpp::value(xorstr_("BasePlayer"), xorstr_("input"));
	uintptr_t inventory = il2cpp::value(xorstr_("BasePlayer"), xorstr_("inventory"));
	uintptr_t clientTeam = il2cpp::value(xorstr_("BasePlayer"), xorstr_("clientTeam"));
	uintptr_t playerFlags = il2cpp::value(xorstr_("BasePlayer"), xorstr_("playerFlags"));
	uintptr_t player_model = il2cpp::value(xorstr_("BasePlayer"), xorstr_("playerModel"));
	uintptr_t player_eyes = il2cpp::value(xorstr_("BasePlayer"), xorstr_("eyes"));
	uintptr_t player_lastSentTick = il2cpp::value(xorstr_("BasePlayer"), xorstr_("lastSentTick"));
	uintptr_t invitetoteam = il2cpp::method(xorstr_("BasePlayer"), xorstr_("InviteToTeam"), 1);
	uintptr_t baseplayer_get_height = il2cpp::method(xorstr_("BasePlayer"), xorstr_("GetHeight"), 1);
	uintptr_t baseplayer_get_radius = il2cpp::method(xorstr_("BasePlayer"), xorstr_("GetRadius"), 0);
	uintptr_t baseplayer_get_jumpheight = il2cpp::method(xorstr_("BasePlayer"), xorstr_("GetJumpHeight"), 0);
	uintptr_t model = il2cpp::value(xorstr_("BaseEntity"), xorstr_("model"));
	uintptr_t modelstate = il2cpp::value(xorstr_("BasePlayer"), xorstr_("modelState"));
	uintptr_t playermodel_position = il2cpp::value(xorstr_("PlayerModel"), xorstr_("position"));
	uintptr_t playermodel_newVelocity = il2cpp::value(xorstr_("PlayerModel"), xorstr_("newVelocity"));
	uintptr_t playermodel_multimesh = il2cpp::value(xorstr_("PlayerModel"), xorstr_("_multiMesh"));
	uintptr_t boneTransforms = il2cpp::value(xorstr_("Model"), xorstr_("boneTransforms"));
	uintptr_t get_mousePosition = il2cpp::method(xorstr_("Input"), xorstr_("get_mousePosition"), 0, xorstr_("UnityEngine"));
	uintptr_t screen_get_width = il2cpp::method(xorstr_("Screen"), xorstr_("get_width"), 0, xorstr_("UnityEngine"));
	uintptr_t screen_get_height = il2cpp::method(xorstr_("Screen"), xorstr_("get_height"), 0, xorstr_("UnityEngine"));
	uintptr_t input_get_key_down = il2cpp::method(xorstr_("Input"), xorstr_("GetKeyDown"), 1, xorstr_("UnityEngine"));
	uintptr_t input_get_key_up = il2cpp::method(xorstr_("Input"), xorstr_("GetKeyUp"), 1, xorstr_("UnityEngine"));
	uintptr_t input_get_key = il2cpp::method(xorstr_("Input"), xorstr_("GetKey"), 1, xorstr_("UnityEngine"));
	uintptr_t gamephysics_line_of_site = il2cpp::method(xorstr_("GamePhysics"), xorstr_("LineOfSight"), 4);
	uintptr_t ignore_layer_collision = il2cpp::methods::resolve_icall(xorstr_("UnityEngine.Physics::IgnoreLayerCollision()"));//il2cpp::method(xorstr_("Physics"), xorstr_("IgnoreLayerCollision"), 3, xorstr_("UnityEngine"));
	uintptr_t mathf_clamp = il2cpp::method(xorstr_("Mathf"), xorstr_("Clamp"), 3, xorstr_("UnityEngine"));
	uintptr_t mathf_atan2 = il2cpp::method(xorstr_("Mathf"), xorstr_("Atan2"), 2, xorstr_("UnityEngine"));
	uintptr_t mathf_max = il2cpp::method(xorstr_("Mathf"), xorstr_("Max"), 2, xorstr_("UnityEngine"));
	uintptr_t mathf_abs = il2cpp::method(xorstr_("Mathf"), xorstr_("Abs"), 1, xorstr_("UnityEngine"));
	uintptr_t transform_get_position = il2cpp::method(xorstr_("Transform"), xorstr_("get_position"), 0, xorstr_("UnityEngine"));
	uintptr_t transform_set_position = il2cpp::method(xorstr_("Transform"), xorstr_("set_position"), 1, xorstr_("UnityEngine"));
	uintptr_t transform_inverse_transform_point = il2cpp::method(xorstr_("Transform"), xorstr_("InverseTransformPoint"), 1, xorstr_("UnityEngine"));
	uintptr_t calcsize = il2cpp::method(xorstr_("GUIStyle"), xorstr_("CalcSize"), 0, xorstr_("UnityEngine"));
	uintptr_t transform_transform_direction = il2cpp::method(xorstr_("Transform"), xorstr_("TransformDirection"), 1, xorstr_("UnityEngine"));
	uintptr_t baseentity__name = il2cpp::value(xorstr_("BaseEntity"), xorstr_("_name"));
	uintptr_t baseentity_closest_point = il2cpp::method(xorstr_("BaseEntity"), xorstr_("ClosestPoint"), 1);
	uintptr_t baseentity_serverrpc_1arg = il2cpp::method(xorstr_("BaseEntity"), xorstr_("ServerRPC"), 1);
	uintptr_t baseentity_sendsignalbroadcast = il2cpp::method(xorstr_("BaseEntity"), xorstr_("SendSignalBroadcast"), 2);
	uintptr_t component_get_transform = il2cpp::method(xorstr_("Component"), xorstr_("get_transform"), 0, xorstr_("UnityEngine"));
	uintptr_t treeentity_hit_direction = il2cpp::value(xorstr_("TreeEntity"), xorstr_("hitDirection"));
	uintptr_t basecombatentity__lifestate = il2cpp::value(xorstr_("BaseCombatEntity"), xorstr_("lifestate"));
	uintptr_t basecombatentity__health = il2cpp::value(xorstr_("BaseCombatEntity"), xorstr_("_health"));
	uintptr_t basecombatentity__maxHealth = il2cpp::value(xorstr_("BaseCombatEntity"), xorstr_("_maxHealth"));
	uintptr_t basecombatentity_lifestate = il2cpp::value(xorstr_("BaseCombatEntity"), xorstr_("lifestate"));
	uintptr_t playerwalkmovement_flying = il2cpp::value(xorstr_("PlayerWalkMovement"), xorstr_("flying"));
	uintptr_t playerwalkmovement_swimming = il2cpp::value(xorstr_("PlayerWalkMovement"), xorstr_("swimming"));
	uintptr_t playerwalkmovement_ducking = il2cpp::value(xorstr_("BaseMovement"), xorstr_("(Ducking)k__BackingField"));
	uintptr_t playerwalkmovement_groundAngle = il2cpp::value(xorstr_("PlayerWalkMovement"), xorstr_("groundAngle"));
	uintptr_t playerwalkmovement_groundAngleNew = il2cpp::value(xorstr_("PlayerWalkMovement"), xorstr_("groundAngleNew"));
	uintptr_t playerwalkmovement_maxAngleWalking = il2cpp::value(xorstr_("PlayerWalkMovement"), xorstr_("maxAngleWalking"));
	uintptr_t playerwalkmovement_maxAngleClimbing = il2cpp::value(xorstr_("PlayerWalkMovement"), xorstr_("maxAngleClimbing"));
	uintptr_t playerwalkmovement_groundTime = il2cpp::value(xorstr_("PlayerWalkMovement"), xorstr_("groundTime"));
	uintptr_t playerwalkmovement_gravityMultiplier = il2cpp::value(xorstr_("PlayerWalkMovement"), xorstr_("gravityMultiplier"));
	uintptr_t playerwalkmovement_jumpTime = il2cpp::value(xorstr_("PlayerWalkMovement"), xorstr_("jumpTime"));
	uintptr_t playerwalkmovement_landTime = il2cpp::value(xorstr_("PlayerWalkMovement"), xorstr_("landTime"));
	uintptr_t item_heldEntity = il2cpp::value(xorstr_("Item"), xorstr_("heldEntity"));
	uintptr_t baseprojectile_aimCone = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("aimCone"));
	uintptr_t recoilproperties_aimConeCurveScale = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("aimconeCurveScale"));
	uintptr_t baseprojectile_aimConePenalty = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("aimconePenalty"));
	uintptr_t baseprojectile_aimConePenaltyMax = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("aimConePenaltyMax"));
	uintptr_t baseprojectile_hipAimCone = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("hipAimCone"));
	uintptr_t baseprojectile_aimconePenaltyPerShot = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("aimconePenaltyPerShot"));
	uintptr_t baseprojectile_createdProjectiles = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("createdProjectiles"));
	uintptr_t baseprojectile_automatic = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("automatic"));
	uintptr_t baseprojectile_aimSway = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("aimSway"));
	uintptr_t baseprojectile_aimSwaySpeed = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("aimSwaySpeed"));
	uintptr_t baseprojectile_primaryMagazine = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("primaryMagazine"));
	uintptr_t baseprojectile_recoil = il2cpp::value(xorstr_("BaseProjectile"), xorstr_("recoil"));
	uintptr_t attackentity_repeatDelay = il2cpp::value(xorstr_("AttackEntity"), xorstr_("repeatDelay"));
	uintptr_t flintstrikeweapon_successFraction = il2cpp::value(xorstr_("FlintStrikeWeapon"), xorstr_("successFraction"));
	uintptr_t client_convar = il2cpp::init_class(xorstr_("Client"), xorstr_("ConVar"));
	uintptr_t graphics_convar = il2cpp::init_class(xorstr_("Graphics"), xorstr_("ConVar"));
	uintptr_t tod_atmosphereparameters = il2cpp::init_class(xorstr_("TOD_AtmosphereParameters"));
	//uintptr_t tod_dayparameters = il2cpp::init_class(xorstr_("TOD_DayParameters"));
	uintptr_t tod_nightparameters_lightintensity = il2cpp::value(xorstr_("TOD_NightParameters"), xorstr_("LightIntensity"));
	uintptr_t tod_nightparameters_reflectionmultiplier = il2cpp::value(xorstr_("TOD_NightParameters"), xorstr_("ReflectionMultiplier"));
	uintptr_t tod_nightparameters_ambientmultiplier = il2cpp::value(xorstr_("TOD_NightParameters"), xorstr_("AmbientMultiplier"));
	uintptr_t tod_dayparameters_ambientmultiplier = il2cpp::value(xorstr_("TOD_DayParameters"), xorstr_("AmbientMultiplier"));
	uintptr_t tod_nightparameters = il2cpp::value(xorstr_("TOD_Sky"), xorstr_("Night"));//il2cpp::init_class(xorstr_("TOD_NightParameters"));
	uintptr_t tod_dayparameters = il2cpp::value(xorstr_("TOD_Sky"), xorstr_("Day"));//il2cpp::init_class(xorstr_("TOD_NightParameters"));
	uintptr_t admin_convar = il2cpp::init_class(xorstr_("Admin"), xorstr_("ConVar"));
	uintptr_t worldItem_item = il2cpp::value(xorstr_("WorldItem"), xorstr_("item"));
	uintptr_t item_info = il2cpp::value(xorstr_("Item"), xorstr_("info"));
	uintptr_t itemdefinition_itemid = il2cpp::value(xorstr_("ItemDefinition"), xorstr_("itemid"));
	uintptr_t itemdefinition_shortname = il2cpp::value(xorstr_("ItemDefinition"), xorstr_("shortname"));
	uintptr_t item_amount = il2cpp::value(xorstr_("Item"), xorstr_("amount"));
	uintptr_t item_uid = il2cpp::value(xorstr_("Item"), xorstr_("uid"));
	uintptr_t playerinventory_containerBelt = il2cpp::value(xorstr_("PlayerInventory"), xorstr_("containerBelt"));
	uintptr_t itemcontainer_itemList = il2cpp::value(xorstr_("ItemContainer"), xorstr_("itemList"));
	uintptr_t projectile_thickness = il2cpp::value(xorstr_("Projectile"), xorstr_("thickness"));
	uintptr_t projectile_integrity = il2cpp::value(xorstr_("Projectile"), xorstr_("integrity"));
	uintptr_t projectile_traveledDistance = il2cpp::value(xorstr_("Projectile"), xorstr_("traveledDistance"));
	uintptr_t projectile_maxDistance = il2cpp::value(xorstr_("Projectile"), xorstr_("maxDistance"));
	uintptr_t projectile_traveledTime = il2cpp::value(xorstr_("Projectile"), xorstr_("traveledTime"));
	uintptr_t projectile_owner = il2cpp::value(xorstr_("Projectile"), xorstr_("owner"));
	uintptr_t projectile_mod = il2cpp::value(xorstr_("Projectile"), xorstr_("mod"));
	uintptr_t itemmodprojectile_projectileSpread = il2cpp::value(xorstr_("ItemModProjectile"), xorstr_("projectileSpread"));
	uintptr_t itemmodprojectile_projectileVelocitySpread = il2cpp::value(xorstr_("ItemModProjectile"), xorstr_("projectileVelocitySpread"));
	uintptr_t projectile_initialVelocity = il2cpp::value(xorstr_("Projectile"), xorstr_("initialVelocity"));
	uintptr_t projectile_currentVelocity = il2cpp::value(xorstr_("Projectile"), xorstr_("currentVelocity"));
	uintptr_t projectile_gravityModifier = il2cpp::value(xorstr_("Projectile"), xorstr_("gravityModifier"));
	uintptr_t hittest_hitEntity = il2cpp::value(xorstr_("HitTest"), xorstr_("HitEntity"));
	uintptr_t hittest_hitNormal = il2cpp::value(xorstr_("HitTest"), xorstr_("HitNormal"));
	uintptr_t hittest_hitTransform = il2cpp::value(xorstr_("HitTest"), xorstr_("HitTransform"));
	uintptr_t hittest_hitPoint = il2cpp::value(xorstr_("HitTest"), xorstr_("HitPoint"));
	uintptr_t hittest_hitDistance = il2cpp::value(xorstr_("HitTest"), xorstr_("HitDistance"));
	uintptr_t hittest_attackray = il2cpp::value(xorstr_("HitTest"), xorstr_("AttackRay"));
	uintptr_t hittest_maxDistance = il2cpp::value(xorstr_("HitTest"), xorstr_("MaxDistance"));
	uintptr_t hittest_didHit = il2cpp::value(xorstr_("HitTest"), xorstr_("DidHit"));
	uintptr_t hittest_damageProperties = il2cpp::value(xorstr_("HitTest"), xorstr_("damageProperties"));
	uintptr_t playerinput_bodyAngles = il2cpp::value(xorstr_("PlayerInput"), xorstr_("bodyAngles"));
	uintptr_t event_get_current = il2cpp::method(xorstr_("Event"), xorstr_("get_current"), 0, xorstr_("UnityEngine"));
	uintptr_t event_get_type = il2cpp::method(xorstr_("Event"), xorstr_("get_type"), 0, xorstr_("UnityEngine"));
	uintptr_t cursor_set_lockState = il2cpp::method(xorstr_("Cursor"), xorstr_("set_lockState"), 1, xorstr_("UnityEngine"));
	uintptr_t gui_get_skin = il2cpp::method(xorstr_("GUI"), xorstr_("get_skin"), 0, xorstr_("UnityEngine"));
	uintptr_t gui_set_color = il2cpp::method(xorstr_("GUI"), xorstr_("set_color"), 1, xorstr_("UnityEngine"));
	uintptr_t gui_drawtexture = il2cpp::method(xorstr_("GUI"), xorstr_("DrawTexture"), 2, xorstr_("UnityEngine"));
	uintptr_t gui_label = il2cpp::method(xorstr_("GUI"), xorstr_("Label"), 2, xorstr_("UnityEngine")); //il2cpp::method_alt(xorstr_("GUI"), xorstr_("Label"), 3, xorstr_("content"), xorstr_("UnityEngine"), 2); //il2cpp::method(xorstr_("GUI"), xorstr_("Label"), 3, "UnityEngine", true, 2, "content");
	uintptr_t gui_button = il2cpp::method(xorstr_("GUI"), xorstr_("Button"), 2, xorstr_("UnityEngine"));
	uintptr_t gui_box = il2cpp::method(xorstr_("GUI"), xorstr_("Box"), 2, xorstr_("UnityEngine"));
	uintptr_t gui_horizontalslider = il2cpp::method(xorstr_("GUI"), xorstr_("HorizontalSlider"), 4, xorstr_("UnityEngine"));
	uintptr_t texture2d_get_whitetexture = il2cpp::method(xorstr_("Texture2D"), xorstr_("get_whiteTexture"), 0, xorstr_("UnityEngine"));
	uintptr_t guistyle_set_fontsize = il2cpp::method(xorstr_("GUIStyle"), xorstr_("set_fontSize"), 1, xorstr_("UnityEngine"));
	uintptr_t guistyle_set_alignment = il2cpp::method(xorstr_("GUIStyle"), xorstr_("set_alignment"), 1, xorstr_("UnityEngine"));
	uintptr_t guicontent_temp = il2cpp::method(xorstr_("GUIContent"), xorstr_("Temp"), 1, xorstr_("UnityEngine"));
	uintptr_t ddraw_get = il2cpp::method(xorstr_("DDraw"), xorstr_("Get"), 0, xorstr_("UnityEngine"));
	uintptr_t ddraw_screentext = il2cpp::method(xorstr_("DDraw"), xorstr_("ScreenText"), 4, xorstr_("UnityEngine"));
	uintptr_t ddraw_line = il2cpp::method(xorstr_("DDraw"), xorstr_("Line"), 6, xorstr_("UnityEngine"));
	uintptr_t ddraw_arrow = il2cpp::method(xorstr_("DDraw"), xorstr_("Arrow"), 5, xorstr_("UnityEngine"));
	uintptr_t ddraw_text = il2cpp::method(xorstr_("DDraw"), xorstr_("Text"), 4, xorstr_("UnityEngine"));
	uintptr_t serverrpc_projectileshoot = memory::find_rel(xorstr_("GameAssembly.dll"), xorstr_("4C 8B 0D ? ? ? ? 48 8B 75 28"));
	uintptr_t baseprojectile_getprojectilevelocityscale = il2cpp::method(xorstr_("BaseProjectile"), xorstr_("GetProjectileVelocityScale"), 1);
	uintptr_t modelstate_set_onLadder = il2cpp::method(xorstr_("ModelState"), xorstr_("set_onLadder"), 1);
	uintptr_t gamemanager_createprefab = il2cpp::method(xorstr_("GameManager"), xorstr_("CreatePrefab"), 2);
	uintptr_t gamemanager_destroy = il2cpp::method(xorstr_("GameManager"), xorstr_("Destroy"), 2);
	uintptr_t buildingblock_canaffordupgrade = il2cpp::method(xorstr_("BuildingBlock"), xorstr_("CanAffordUpgrade"), 2);
	uintptr_t buildingblock_canchangetograde = il2cpp::method(xorstr_("BuildingBlock"), xorstr_("CanChangeToGrade"), 2);
	uintptr_t buildingblock_upgradetograde = il2cpp::method(xorstr_("BuildingBlock"), xorstr_("UpgradeToGrade"), 2);
	uintptr_t consolesystem_index = il2cpp::init_class(xorstr_("ConsoleSystem.Index"));
	uintptr_t baseplayer_consolemessage = il2cpp::method(xorstr_("BasePlayer"), xorstr_("ConsoleMessage"), 1);
	uintptr_t time_get_time = il2cpp::method(xorstr_("Time"), xorstr_("get_time"), 0, xorstr_("UnityEngine"));
	uintptr_t time_get_deltaTime = il2cpp::method(xorstr_("Time"), xorstr_("get_deltaTime"), 0, xorstr_("UnityEngine"));
	uintptr_t debug_draw_ray = il2cpp::method(xorstr_("Debug"), xorstr_("DrawLine"), 4, xorstr_("UnityEngine"));
	uintptr_t vector2_signed_angle = il2cpp::method(xorstr_("Vector2"), xorstr_("SignedAngle"), 2, xorstr_("UnityEngine"));
	uintptr_t create = il2cpp::method(xorstr_("GameObject"), xorstr_("Internal_CreateGameObject"), 2, xorstr_("UnityEngine"));
	uintptr_t dont_destroy_on_load = il2cpp::method(xorstr_("Object"), xorstr_("DontDestroyOnLoad"), 1, xorstr_("UnityEngine"));
	uintptr_t object_name = il2cpp::value(xorstr_("Object"), xorstr_("name"));
	uintptr_t add_component = il2cpp::method(xorstr_("GameObject"), xorstr_("AddComponent"), 1, xorstr_("UnityEngine"));
	uintptr_t guiutility_rotatearoundpivot = il2cpp::method(xorstr_("GUIUtility"), xorstr_("RotateAroundPivot"), 2, xorstr_("UnityEngine"));
	uintptr_t randomrange = il2cpp::method(xorstr_("Random"), xorstr_("Range"), 2, xorstr_("UnityEngine"));
	uintptr_t baseplayer_mounted = il2cpp::value(xorstr_("BasePlayer"), xorstr_("mounted"));
	uintptr_t basemountable_canwielditems = il2cpp::value(xorstr_("BaseMountable"), xorstr_("canWieldItems"));
	uintptr_t tod_sky_get_instance = il2cpp::method(xorstr_("TOD_Sky"), xorstr_("get_Instance"), 0);
	uintptr_t unity_web_request_get = il2cpp::method(xorstr_("UnityWebRequest"), xorstr_("Get"), 1, "UnityEngine.Networking");
	uintptr_t unity_web_request_get_response_code = il2cpp::method(xorstr_("UnityWebRequest"), xorstr_("get_responseCode"), 0, "UnityEngine.Networking");
	uintptr_t unity_web_request_send_web_request = il2cpp::method(xorstr_("UnityWebRequest"), xorstr_("SendWebRequest"), 0, "UnityEngine.Networking");
	uintptr_t unity_web_request_get_download_handler = il2cpp::method(xorstr_("UnityWebRequest"), xorstr_("get_downloadHandler"), 0, "UnityEngine.Networking");
	uintptr_t download_handler_get_text = il2cpp::method(xorstr_("DownloadHandler"), xorstr_("get_text"), 0, "UnityEngine.Networking");
	uintptr_t attackentity_nextattacktime = il2cpp::value(xorstr_("AttackEntity"), xorstr_("nextAttackTime"));
	uintptr_t attackentity_timesincedeploy = il2cpp::value(xorstr_("AttackEntity"), xorstr_("timeSinceDeploy"));
	uintptr_t attackentity_deploydelay = il2cpp::value(xorstr_("AttackEntity"), xorstr_("deployDelay"));
	uintptr_t attackentity_repeatdelay = il2cpp::value(xorstr_("AttackEntity"), xorstr_("repeatDelay"));
	uintptr_t basemelee_damageproperties = il2cpp::value(xorstr_("BaseMelee"), xorstr_("damageProperties"));
	uintptr_t basemelee_processattack = il2cpp::method(xorstr_("BaseMelee"), xorstr_("ProcessAttack"), 1);
	uintptr_t attackentity_startattackcooldown = il2cpp::method(xorstr_("AttackEntity"), xorstr_("StartAttackCooldown"), 1);
	uintptr_t playereyes_bodyforward = il2cpp::method(xorstr_("PlayerEyes"), xorstr_("BodyForward"), 0);
	uintptr_t playereyes_bodyright = il2cpp::method(xorstr_("PlayerEyes"), xorstr_("BodyRight"), 0);
	uintptr_t physics_checkcapsule = il2cpp::method(xorstr_("Physics"), xorstr_("CheckCapsule"), 5, xorstr_("UnityEngine"));
	uintptr_t playertick_position = il2cpp::value(xorstr_("PlayerTick"), xorstr_("position"));
	uintptr_t rigidbody_setVelocity = il2cpp::method(xorstr_("Rigidbody"), xorstr_("set_velocity"), 1, xorstr_("UnityEngine"));
}